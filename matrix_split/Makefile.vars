# which compiler to use
CC = gcc

# compiler flags:
#	-std=c99	chooses C99 standard
#	-Wall	turns on a lot of warnings
#	-ftrapv	errors for signed overflow on addition, subtraction, and multiplication
#	-ggdb	generate debugging symbols for gdb
#	-DDEBUG	define the preprocessor macro "DEBUG"
CFLAGS = -std=c99 -Wall -ftrapv -ggdb -DDEBUG

# link flags:
#	-lm	lets us use the "m" math library
LDFLAGS = -lm

matrix_split : matrix_split.o matrix.o matrix_io.o matrix_ops.o debugging.o
	$(CC) $(CFLAGS) $(LDFLAGS) -o matrix_split matrix_split.o matrix.o matrix_io.o matrix_ops.o debugging.o

# how to build a file named "matrix.o"
# it uses a .c file and a couple .h files, so if the c code or the headers change, it will be rebuilt
# we have to list all the included headers plus all hte headers that those headers include!
matrix.o : matrix.c matrix.h debugging.h
	$(CC) $(CFLAGS) -c -o matrix.o matrix.c

matrix_io.o : matrix_io.c matrix_io.h matrix.h debugging.h
	$(CC) $(CFLAGS) -c -o matrix_io.o matrix_io.c

matrix_ops.o : matrix_ops.c matrix_ops.h matrix.h debugging.h
	$(CC) $(CFLAGS) -c -o matrix_ops.o matrix_ops.c

debugging.o : debugging.c debugging.h
	$(CC) $(CFLAGS) -c -o debugging.o debugging.c

matrix_split.o : matrix_split.c matrix.h matrix_io.h matrix_ops.h debugging.h
	$(CC) $(CFLAGS) -c -o matrix_split.o matrix_split.c

